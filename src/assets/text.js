const bookData = [
  {
    book_id: 1,
    book_name: 'vue',
    chapter_collect: 1,
    page__collect: 1,
    section: 1,
    bookContents: [
      {
        chapter_id: 1,
        title: '第一章',
        setions: [
          { setion_id: 0, locationId: 1, title: '六大纪元', textContent: ' <h2>第一节 六大纪元</h2> <p>  我不能确定自己是在什么时候第一次意识到奇点的，应该承认这是一个逐渐认识的过程。在近半个世纪的时间里，我致力于计算机及其相关技术的研究工作，并努力去理解我亲身经历的很多层面上的巨大变革及其背后的内涵和意义。渐渐地，我开始认识到21世纪前五十年里变革的大致轮廓——就好像空间中的黑洞突然改变了物质和能量的模式，加速朝其边界发展。这逼近未来的奇点，从肉体到精神，逐步地改造人类生活的各个方面。</p> <p>  那么，什么是奇点呢？奇点是未来的一个时期：技术变革的节奏如此迅速，其所带来的影响如此深远，人类的生活将不可避免地发生改变。虽然这个纪元既不是乌托邦，也不是反乌托邦的形态，但它将人类的信仰转变为生命能理解的意义；将事物模式本身转变为人类生命的循环，甚至包含死亡本身。理解奇点，将有利于我们改变视角，去重新审视过去发生的事情的重要意义，以及未来发展的走向。一个人真正理解了奇点的含义，将从根本上改变他的人生观和他的人生。我所尊重的一些人，他们理解了奇点，领悟了它的内涵，他们终身都是奇点人。</p> <p>我可以理解，为什么很多观察家不能较快地意识到加速回归定律的本质内涵（发展变革的本质加速，包括技术的进化作为生物进化的延续）。毕竟，我用了四十年的时间去见证这个定律的正确性，而且，这个定律所带来的后果并不都是令人满意的。</p> <p>奇点临近暗含一个重要思想：人类创造技术的节奏正在加速，技术的力量也正以指数级的速度在增长。指数级的增长是具有迷惑性的，它始于极微小的增长，随后又以不可思议的速度爆炸式地增长——如果一个人没有仔细留意它的发展趋势，这种增长将是完全出乎意料的（见图1-1）。</p> <p>请看这样一个寓言：一个湖的主人希望呆在家中照料湖中的鱼，他要确保湖面不会被百合浮萍覆盖，这种浮萍据说每天都以其自身两倍的数量增长。日复一日，湖的主人耐心地等待，他发现只有很少量的百合浮萍出现，而且它们似乎不会以任何显著的方式扩展蔓延。由于只有不到百分之一的湖面覆盖了百合浮萍，湖的主人确认可以与家人度过一个悠闲的假期。几周之后，当他回来的时候，他被眼前的景象震惊了：整个湖面都被浮萍覆盖了，所有的鱼也都死了。由于浮萍的数量以每天成倍的速度增长，7次加倍就可以使浮萍覆盖整个湖面（7次加倍将达到原来128倍）。这个例子说明了指数增长的内涵。</p>  <p>再来看看国际象棋世界冠军格瑞·卡斯帕罗夫，1992年，他曾不屑于计算机棋手的水平。但是由于计算机的能力每年都以两倍的速度递增，所以五年后，卡斯帕罗夫被计算机击败。在很多方面，计算机现在已经超越了人类的计算能力，并以更快的速度发展。同时，计算机智能应用也在逐渐拓宽。举例来说，计算机能够诊断心电图和医学图像，侦测飞机的起飞与降落，控制自动武器的战术决策，做出信用与金融决策，同时承担着很多需要人工智能辅助完成的任务。但是人工智能在众多领域也存在缺陷，怀疑者认为人工智能在某些领域无法超越人类智能，这恰恰说明了人类的能力优于其本身的创造能力。</p>  <p>尽管如此，本书将会讨论在未来的几十年里，基于信息的技术将会容纳人类所有的知识和技能，甚至包含识别模式的能力、解决问题的技巧，以及人类大脑中内在的情感与道德的智慧。</p>' },
          { setion_id: 1, locationId: 2, title: '技术进化理论：加速回归定律', textContent: '<h2>第二节 技术进化理论：加速回归定律</h2>  <p>你能向后看得越久，就能向前看得越远。</p>  <p>——温斯顿·丘吉尔</p>  <p>20亿年前，我们的祖先是微生物；5亿年前，是鱼类；一亿年前，是类似于哺乳动物的生物；1000万年前，是类人猿；100万年前，原始人类经过苦苦探索后驯服了火。我们演化进程的典型特征是把握变化，如今变化的节奏正在加快。</p>  <p>——卡尔·萨根</p>  <p>我们唯一的任务是制造出比我们更聪明的东西，除此之外都不是由我们考虑的问题……世界上本没有绝对的难题，只有相对于一定智力水平的难题。若智力水平向上提升了一点，一些原来不能解决的难题就变得容易了；如果智力水平提升了一大步，所有的问题就都能被解决。</p>  <p>——埃里泽·余德努维奇，凝视奇点，1996</p>  <p>技术的不断加速是加速回归定律的内涵和必然结果，这个定律描述了进化节奏的加快，以及进化过程中产物的指数增长。这些产物包括计算的信息承载技术，其加速度实质上已经超过了摩尔定律做出的预测。奇点是加速回归定律的必然结果，所以我们研究这一进化过程的本质属性非常重要。</p>  <p>秩序的本质。第1章描绘的几张图证明了范式迁移的加速度（范式迁移是指完成任务的方法和智能处理的过程发生了重要改变，例如书写语言和计算机。）这些图表描绘了从宇宙大爆炸到互联网发明时期，生物和技术进化两方面的过程，它们已经被15个思想家和相关的著作视为关键的事件。我们可以看到这些事件呈现出一种明显的指数增长趋势：关键事件正以日益加快的节奏发生着。</p>  <p>思想家们关于构成“关键事件”的标准不尽相同，但是他们做出选择所依据的原则值得深思。一些评论员认为，在生物和技术的历史中，真正跨时代的进步涉及复杂度的增加</p>  <p>。尽管复杂度确实随着生物和技术进化不断增加，但我并不认为这个观点是完全正确的。首先我们要重新审视复杂度的定义。</p>  <p>毫不奇怪，复杂度的概念是复杂的。复杂度的其中一个定义如下：表达一个过程所需要的最少信息量。比如设计一个系统（例如，一个计算机程序或者一个计算机辅助设计文件），这个系统可以由一个100万比特大小的数据文件来描述，我们就可以说这个设计的复杂度为100万比特。但是如果这100万比特的信息本质上是由某种形式的1000比特重复了1000次构成的，我们就能够通过这1000个比特来表达整个设计，从而将文件的大小减少大约1000倍。</p>  <p>最流行的数据压缩技术使用了类似的剔除冗余信息的方法，但用这种方式压缩数据文件，无法知道是否还有更好的压缩方法。例如，假设需要压缩的文件是π（3.141592……），其精确度达到100万位。大部分数据压缩程序无法识别这个序列，完全不能进行压缩，因为π的二进制表达序列随机性很强，难以测试出重复的序列。</p>  <p>但是，如果我们能够确定该文件（或文件的一部分）实质上代表π，我们就可以很容易地将它（或它的一部分）表达得非常简洁，即“π，精度为100万比特”。由于我们不能确定信息序列是否有更加紧凑的表达方式，故任何压缩形式都只能作为信息复杂度的上界，摩尔德·盖尔曼沿着这个思路来定义复杂度。他的定义是：一组信息的“算法信息量”为“能使普通计算机输出位串并可以停止的最短的程序长度”</p>  <p>但是摩尔德·盖尔曼的定义并不完整。如果一个文件包含随机信息，它就不能被压缩。实质上，观察是确定一个数列是否真正随机的重要标准。但是，如果将任何随机序列设定为特殊的符号，那么这个信息就可以用简单的指令来表示，比如该指令为“该位置存放了随机的数字序列”。随机序列（无论是10比特或10亿比特）不能代表复杂度，因为它们都可以用一个简单的指令来表示。这也是随机序列和不可预知序列的区别。</p>' },
          { setion_id: 2, locationId: 3, title: '达到人脑的计算能力', textContent: '<h2>第三节 达到人脑的计算能力</h2>  <p>正如讨论发动机的发明一样，如果可以实现真正的人工智能，我们就有理由相信，人类可以创造比神经细胞快100万倍的东西。由此可以得出这样的结论：我们可以建立一些系统，并使它们的运行速度比人类快100万倍。通过人工智能，这些系统可以从事工程设计的工作。这样的话一个系统有能力创造一个比自己更好的系统，也就有了突然转变的可能性。即使跟纳米技术相比，这种情况处理起来也会显得更加困难，但更难得的是要在这个问题上有建设性的思考。虽然我不时地指出来“它也是很重要的”，但这已经不是我们讨论的焦点了。</p>  <p>——埃里克·德雷克斯勒，1989</p>  <h4>计算机技术第六范式：三维分子计算和新兴计算技术</h4>  <p>1965年4月19日，戈登·摩尔在《E1ectronics》杂志上这样写道：“集成电子的未来就是电子自身的未来。集成电路的优势将带来电子学的扩散，并把这门科学推广到很多新的领域。”摩尔通过这些话，宣告了一场势头正劲的革命的到来。为了让他的读者意识到这个新科学的深远意义，摩尔预言，“到1975年，国家经济将建立在一个由多达65000个元件压缩而成的单硅芯片上。”试想一下这些吧。</p>  <p>摩尔的文章描述了嵌入到集成电路上的晶体管（用作计算单元或者门电路）的数量，每年都会增长一倍。他在1965年提出的“摩尔定律”在当时饱受争议，因为他的片上元件数量对数图上只有5个参考点（从1959年到1965年），所以由此来预测1975的趋势是不成熟的。摩尔的最初估计是错误的，他在10年后修订了这一数字（更改为两年翻一番）。但是这个基本观点（由于集成电路板上晶体管体积的缩小而导致电子产品的性价比呈指数增长）被证明是正确的而且有先见之明的。</p>  <p>今天，我们谈论的是上十亿级而不是上千级的组件。2004年最先进的芯片中，逻辑门仅有50纳米宽，这已经完全是纳米级别（100纳米或以下即属于纳米技术范畴）的数值了。摩尔定律终有一天会终结，但这一典型范式的结束时间一直在推迟。Paolo Gargini，英特尔技术主管兼著名的国际半导体技术路线图（ITRS）主席，最近指出，“我们预测至少在未来15到20年时间里，电子产品将会按摩尔定律继续发展。事实上……纳米技术为我们提供了许多新的关键技术来增加一个芯片上元件的数量。”</p>  <p>就像我将用整本书去论证的那样，计算机技术的加速发展已经改变了社会关系、经济关系、政治体制以及其他一切。但是摩尔在他的文章里并没有指出，缩小体积的策略，实际上并不是给计算和通信带来指数级增长的第一范式。它只排在第5位，而且我们也已经可以看到接下来的大概情形：在分子水平和三维水平上的计算。尽管第五范式还会使用十几年，但我们已经在所有需要使用第六范式的技术上取得了令人信服的进展。在下一节，我将会分析为了达到人脑的智力水平所需要的计算和存储能力，以及为什么我们会相信，在不到20年里用不是很贵的计算机就能达到这样的水平。即使这些强大的计算机远没有达到最佳的状态，而且在本章的最后一节，我会回顾由目前我们所理解的物理定律所带来的计算限制。大约21世纪末，真正的计算机时代就会到来。</p>  <p>三维分子计算的桥梁。过渡阶段正在进行中：许多新的技术会促进第六代范式——分子三维计算的问世，这些技术包括纳米管和纳米管电路、分子计算、自组装纳米管电路、生物系统模拟电路组装、DNA计算、自旋电子学（电子的自旋计算）、光计算以及量子计算。其中许多独立的技术可以被集成到计算系统，最终将接近理论上物质和能量用于完成计算的能力的最大值，并且远远超过人脑的计算能力。</p>  <p>一种方法是采用光刻硅芯片来构建三维电路。Matrix Semiconductor公司已经在销售一种存储芯片，它含有垂直的晶体管堆叠层而不是一个平面层。由于三维芯片存储量更大，从而缩小了产品的体积，因此Matrix Semiconductor最初将目标定位到便携电子产品，以此同闪存（用于手机和数码相机，因为它在电源关闭时不会丢失信息）相竞争。而其中堆叠电路的应用还降低了每比特的价格。另一种方法来自于Matrix公司的竞争对手之一，文本冈富士雄（前东芝公司的工程师），就是他发明了闪存。富士雄声称他的新型内存设计（这种设计看起来像一个柱状体）降低了存储器的体积和每比特的价格，是平板芯片的十分之一。而这个三维芯片的工作原型，也在伦斯勒理工学院千兆集成中心和麻省理工学院媒体实验室得到了证实。</p>  <p>位于东京的日本电报电话公司（NTT）通过使用电子束平印术，展示了梦幻般的3D技术。电子束平印术可以创建任意特征尺寸（和晶体管一样）大约是10纳米的三维结构。 NTT公司通过创建一个大小为60微米、特征长度为10纳米的高分辨率的地球模型，证明了这项技术。NTT认为该项技术适用于电子设备的纳米加工，如半导体以及建立纳米级的机械系统。</p>  <p>纳米管依然是最佳选择。在《The Age of Spiritual Machines》一书中，我指出纳米管（用三维组织的分子来存储信息和充当逻辑门）是三维分子计算时代最有可能使用的技术。1991年首次合成的纳米管，是由六角形的碳原子网状物卷起来组成的无缝柱体。碳纳米管非常小——单壁纳米管的直径只有1纳米，这样可以达到很高的密度。</p>  <p>它们也可能很快。皮特·伯克和他在加利福尼亚大学欧文分校的同事最近证明了纳米管电路可以以2.5GHz运行。然而，在《Nano Letters》（美国化学学会同行评审期刊）上，伯克说，这些纳米晶体管的理论限速“应该是太赫兹（1THz=1000GHz）级别，大约是现代计算机速度的1000倍”。</p>' }
        ]
      },
      {
        chapter_id: 2,
        title: '第二章',
        setions: [
          { setion_id: 0, locationId: 4, title: '如何实现大脑的逆向工程', textContent: ' <h2>第四节 达到人类智能的软件：如何实现大脑的逆向工程</h2> <p>有充分理由表明，我们正处在一个转折点，而且有可能在未来20年对大脑功能形成有意义的理解。这种乐观的观点是有据可循的，它是以几个可衡量的趋势和一个在科学史上得到多次证明的简单观察为基础的：技术进步推动科技进步，这些技术可以让我们看到以前没有看到过的东西。在21世纪，我们将通过神经科学知识和计算机性能之间可测量的转折点。这是历史上我们第一次充分了解自己的大脑，并开发出先进的计算机技术，我们现在能够承担一个人类智能的重要部分的模型建设，并实现可核查、实时和高分辨率。</p>  <p>——劳埃德·瓦特，神经系统科学家</p>  <p>当前，我们第一次以全球性的工作方式如此清晰地观察大脑，以至于我们能够发现它宏伟力量背后的整体规划。</p>  <p>——泰勒，霍维茨，弗里斯顿，神经系统科学家</p>  <p>大脑的逆向工程：任务概况</p>  <p>将人类智能与计算机在速度、精度、存储分享能力上所固有的优越性结合起来是十分艰巨的。然而，到目前为止，大多数人工智能的研究和发展已经利用了一些工程方法，但是这些方法不一定基于人脑功能，原因很简单，我们还没有精密的工具去开发详细的人类认知模型。</p>  <p>我们大脑逆向工程的能力——观察内部、建模并模拟各区域——正以指数方式增长。我们最终会理解隐藏在思维、知识全部范围内的运作原则，这些将为开发智能机器的软件提供强大的程序支持。伴随着这些计算技术的应用，它们将得到不断修改、完善和扩展，而这些技术远比生物神经元内部的电化学加工过程更为强大。这一宏伟工程的关键优势是，它为我们提供了精确的见解。我们也将获得有效的新方法，以便治疗诸如阿尔茨海默氏症、帕金森氏症、感官残疾、中风等疾病，并最终大大扩展我们的智能。</p>  <p>新的脑成像和建模工具。通过逆向工程仔细研究大脑的第一步是确定它的工作原理。到目前为止，我们的工具，虽然很简陋，但也正在发生变化，作为新的扫描技术，它大大改善了时间和空间分辨率，提高了性价比和带宽。同时，我们正在迅速地积累关于大脑系统及其组成部分的精确特点和动态性的数据，这些数据包括从个别突触到大的区域，如小脑，其中包括超过一半的大脑神经元。大量的数据库正在有条不紊地为我们呈指数增长的大脑知识组织目录。</p>  <p>研究人员已经证明，他们能迅速地理解和应用这些通过建模仿真出来的信息。大脑区域模拟的基础是数学复杂性理论和混沌计算原理，并且已经获得了与实际人类和动物大脑紧密匹配的实验结果。</p>  <p></p> ' },
          { setion_id: 1, locationId: 5, title: 'GNR：三种重叠进行的革命', textContent: '<h2>第五节 GNR：三种重叠进行的革命</h2>  <p>人们不断地改进各种机械用具，这些不可思议的改进最令现代人感到兴奋与自豪……但是，如果技术的持续发展比动植物王国的进化更迅速，那将会发生什么呢？它会取代我们在地球的最高地位吗？正如植物王国缓慢地从矿石中发展而来，在地球占领统治地位；动物以相似的方式继植物之后统治地球；而就在最近的几个时代里，一个全新的王国异军突起，将来在这个王国中，我们也只能被视作远古物种的原型……人们每天赋予[机器]更强的力量，通过各种精巧的设计，为其提供自我调节、自我运行的能力，这些智能对于机器来讲，作用等同于智慧对人类。</p>  <p>——萨缪尔·巴特勒，1863（达尔文的《物种起源》发表后的第4年）</p>  <p>谁是人类的继承者？回答是：我们正在创造我们自己的继承者。在将来的某一天，人类与机器的关系就如同现今动物与人的关系。结论就是，机器具有或将具有生命。</p>  <p>21世纪的前半叶将描绘成三种重叠进行的革命——基因技术（G）、纳米技术（N）和机器人技术（R）。这将预示着第1章所提及的第五纪元的到来——奇点的开端。现今，我们处在基因革命的早期阶段。通过理解信息在生命中的处理过程，我们开始学习改造自身的生物特征，以消除疾患、激发人类潜能，从根本上扩张生命的力量。汉斯·莫拉维茨指出，无论我们多么成功地微调基于DNA的生命体，人类仍旧是“第二级别的机器人”，这意味着，一旦我们能够完全理解生物运作的原理，并付诸工程设计中，那么生物本身的智能将无法企及机器的智能。</p>  <p>纳米革命将使我们可以重新设计和重构（以分子为基本单位）人类的身体和大脑，以及与人类休戚相关的世界，并且可以突破生物学极限。即将来临的最具威力的革命，要属机器智能革命，具有智能的机器人脱胎于人类，经过重新设计后，将远远超过人类所拥有的能力。R代表最为重大的变革，因为智能是宇宙中最强大的力量。如果智能足够先进的话，那么它将有能力预测并克服前进道路上的一切障碍。</p>  <p>然而，每次革命在解决先前的诸多问题的同时，也会引进新的风险。基因革命将会克服顽疾、防止衰老，但同时，也带了新生物工程中病毒所引发的潜在威胁。一旦纳米技术得到充分发展，那么运用该技术将使人类免于生物学上的危害。但是，它可能引发自我复制的危险，这比任何生物学上的危害都更为猛烈。我们可以通过充分发展机器人技术，从这些危害中解救自身，可又有什么能保护我们免遭这种超越了人类智能的机器人的侵袭呢？在第8章的结尾部分的讨论中我们将给出处理这些问题的对策。不管怎样，我们将审视在G、N、R三种相互重叠进行的革命中奇点的具体表现。</p>  <p>基因技术：信息与生物的交融</p>  <p>我们注意到，我们所假定的这种特定成对的物质，直接表明了这极有可能是具有自我复制机制的遗传物质。</p>  <p>——詹姆斯·沃森和弗朗西斯·克里克</p>  <p></p> ' },
          { setion_id: 2, locationId: 6, title: '影响的盛装', textContent: '<h2>第六节 影响的盛装</h2>   <p>未来进入我们的视野，为的是替换我们当下的生活，尽管离一切发生还早。</p>  <p>——瑞尔·玛利亚·里尔克</p>  <p>影响的盛装。如果非生物智能成为主宰，人类的感受会是什么？如果人工智能和纳米技术可以创造出我们想象的任何产品、任何位置、任何环境，人类机器文明又会暗示出什么？我在这里强调想象力的作用，是因为我们的想象仍然受到制约。然而，那些为我们生活带来幻想的工具正在以指数级的速度变得强大。</p>  <p>由于奇点的临近，我们将不得不重新思考人类生活性质的概念，重新设计我们人类的习俗。本章将探讨这些概念和习俗。</p>  <p>例如，G、N和R的革命交织在一起将使脆弱的人体1.0版本转变为更持久的、更有能力的2.0版本。数十亿的纳米机器人将参与我们身体和大脑的血液循环。在我们体内，它们将杀死病原体，修正DNA错误，消除毒素，以及执行许多其他任务，以增强我们的身体健康。这样，我们将能够无限期地生活下去，不会变老。</p>  <p>在我们的大脑中，大量的分布式纳米机器人将与我们的生物神经元相互配合。它将提供包括全部感觉的全沉浸虚拟现实。这种全沉浸虚拟现实和与我们情感相关的神经一样在神经系统内部作用。更重要的是，生物思想和我们正在创建的非生物智慧之间的密切关系将在很大程度上扩展人类的智慧。</p>  <p>战争将走向纳米机器人武器时代，正如现在的计算机武器一样。学习最先会转移到互联网上，然而，当我们的大脑也可以上网时，我们就可以把新的知识和技能下载下来。工作的职责会变为创造各种知识，从音乐、艺术到数学、科学等。娱乐的职责也一样会变为创造知识，所以工作和娱乐之间将不会有明显的差别。</p>  <p>地球上的智慧将继续以指数级扩张，直到我们所拥有的物质和能量可以支撑起真正的智能计算。在我们即将到达银河系边界时，人类文明的智慧将以可能的最快速度向外扩展到宇宙的其他部分。我们知道速度的上限是光速，但也有人认为我们可以绕过这一表面的限制（例如，有可能通过虫洞来获取捷径）。</p>  <p></p> ' }
        ]
      },
      {
        chapter_id: 3,
        title: '第三章',
        setions: [
          { setion_id: 0, locationId: 7, title: '我是奇点', textContent: ' <h2>第七节 我是奇点</h2>  <p>生命哲学植根于历史悠久的传统，包含了很多关于个人的、组织的和社会生活的智慧。我们中的许多人也发现了那些传统的缺点。在科学尚未成型的年代，这种传统怎么可能不引领我们走向某种谬误？先进的现代科技已经成功地使人由个人转化为人类整体，同时经济、政治、文化等因素已经使得国际形势发生了改变。对此，古代的生命哲学并未做过多的阐释。</p>  <p>我本人就曾用了几十年的时间来对这一问题进行反思。当然，这不是一个人可以完成的任务。早在20世纪60年代，少年时代的我就开始对人类思维与计算技术之间联系的问题进行思考。到了20世纪70年代，我又致力于研究技术加速理论，并且在20世纪80年代末出版了第一本书表达我对这一问题的见解。所以，我有时间去思考现在的叠加转变对社会和人类自身造成的影响。</p>  <p>乔治·吉尔德将我在科学和哲学上的理论称为“为对传统信仰失去信心的人提供的替代幻想”。</p>  <p>吉尔德的陈述也不难理解，因为关于奇点的猜想与关于传统信仰转化的猜想之间，至少存在着一些共性。</p>  <p>但我并不会将我的观点作为寻找传统信仰替代品的结果。我了解技术趋势的探索出发点非常现实：只是想去尝试实践我的一些发明，并且为未来的技术公司创造最佳决策条件。这种技术建模渐渐地呈现它自己的生命，并且引导我构想出关于科技进化的理论。此时，这些决定性的改变对社会和文化习惯与我自己的生活的影响并不是一个很大的跳跃。所以，当奇点人不与信仰有关，而只与认识有关，我在书中对科技趋势做出预测时，不可避免地产生了关于传统信仰试图去陈述的观点：死亡与不朽的本质、人类存在的意义、宇宙中的智慧。</p>  <p>作为一个奇点人，我总是会感到很孤独或者不太合群，因为我遇到的很多人并不认同我的观点。很多“伟大的思想家”完全没有意识到这样伟大的思想。在无数的陈述和评论中，相反，人们通常会相信这种普遍的智慧：人生短暂，人类的智力、体力已经达到极限，没有什么东西可以在本质上改变我们的寿命。我预料，当加速改变的暗示变得越来越明显，这种狭隘的观点将会改变。于是我编写了这本书，希望更多的人能来认同我的观点。</p>  <p>那么，我们应当怎样去认知奇点呢？正如对待太阳一样，很难直视它，最好是从我们的眼角斜视它。正如麦克斯·摩尔所说的，我们需要的最重要的东西是另一个教条而不是迷信，因此，奇点理论不是一套信仰或统一观点的系统。奇点本质上是对科技趋势的理解，同时也是引起一个人重新思考每一件事的领悟，从健康和财富的意义到死亡和生命的本质。</p>  <p>在我看来，作为一个奇点人应包括方方面面的知识，而以下列出的只是沧海一粟。这些想法不是一个新教条的建议，只表达我个人的人生观。</p>  <p></p> ' },
          { setion_id: 1, locationId: 8, title: 'GNR：希望与危险的深度纠结', textContent: '<h2>第八节 GNR：希望与危险的深度纠结</h2>   <p>任何人只要发布上述第一项，几乎可以肯定，美国联邦调查局很快就会来造访他。2000年3月，一个名叫纳特·齐格勒的15岁高中生就经历过这样的事情。为了一个学校的科学项目，他建立了一个原子弹的纸模型，结果十分的准确。在随后的媒体风暴中，齐格勒告诉ABC新闻：“你知道，就像某些人提到的那样，你可以上网获取信息，我并不是最早获得这些信息的人。试一试。我上网，点几下鼠标，然后就找到了合适的信息。”</p>  <p>当然，齐格勒没有拿到核心配料钚，也没有打算得到它，但是这篇报道仍然在媒体界一石惊起千层浪，更别提担心核扩散的政府了。</p>   <p>据报道，齐格勒找到了563个关于原子弹设计的Web页面，报道的结果是这些网站很快被封杀。遗憾的是，试图在互联网上禁止一些信息就像是用扫帚把海水扫退。直到今天，这些网站都还很容易访问。我不会在本书里提供它们的网址，但是它们并不难找到。</p>   <p>虽然上述文章标题是虚构的，但是人们可以从互联网中找到许多关于这些问题网上有大量的信息，包括关于如何制造炸弹、武器和爆炸物的军事手册。有些信息是错误的，但是关于这些课题的正确信息还是能够访问到的，尽管有人努力删除这些信息。1997年7月，国会通过了一项修正案（the Feinstein Amendment,SP419），给国防部拨款，禁止制造炸弹的方法传播。见Anne Marie Helmenstine，的信息。万维网是一个非凡的研究工具。以我个人的体验，过去需要在图书馆利用半天时间做的研究，现在只需要几分钟甚至更短的时间就可以完成。</p>  <p>这对于促进有益技术的进步具有巨大和明显的好处，但是这同时也为那些反社会的人提供了便利。那么我们生活在危险之中吗？回答显然是肯定的。有多危险？要怎样做才能规避危险？这些是本章的主题。</p>  <p>追溯起来，我密切关注这个问题已经至少几十年了。在20世纪80年代中期，我写《The Age of Intelligent Machines》那本书的时候，我对那时新兴的基因工程表示担忧，因为基因工程可以通过技术的手段使用大量有效的设备修改细菌和病毒性病原体的结构，从而制造新的疾病。在破坏者或者粗心人的手中，这些改造的病原体可以组合成具有高度传染性、隐蔽性和破坏性的联合体。</p>  <p>在20世纪80年代，这些工作很难实现，但却是可行的。我们现在知道当时的一些国家从事过生化武器的计划。当时我特意做了一个决定，在我的书里不去讨论这些恐怖之事，因为我不想给那些坏人任何破坏性的想法。我不想在某一天打开收音机时，听到一个灾难，然后犯罪分子说，他们的想法是从雷·库兹韦尔那得到的。</p>   <p></p> ' },
          { setion_id: 2, locationId: 9, title: '影响的盛装', textContent: '<h2>第九节 影响的盛装</h2>   <p>未来进入我们的视野，为的是替换我们当下的生活，尽管离一切发生还早。</p>  <p></p> ' }
        ]
      },
      {
        chapter_id: 4,
        title: 'chapter-04',
        setions: [
          { setion_id: 0, locationId: 10, title: 'setion1', textContent: '<h2>Chapter-04-setion1 Vue.js</h2> <p> chapter-01--setion1 Vue (pronounced /vjuː/, like view) is a progressive framework for building user interfaces. Unlike other monolithic frameworks, Vue is designed from the ground up to be incrementally adoptable. The core library is focused on the view layer only, and is easy to pick up and integrate with other libraries or existing projects. On the other hand, Vue is also perfectly capable of powering sophisticated Single-Page Applications when used in combination with modern tooling and supporting libraries.</p>   Vue (pronounced /vjuː/, like view) is a progressive framework for building user interfaces. Unlike other monolithic frameworks, Vue is designed from the ground up to be incrementally adoptable. The core library is focused on the view layer only, and is easy to pick up and integrate with other libraries or existing projects. On the other hand, Vue is also perfectly capable of powering sophisticated Single-Page Applications when used in combination with modern tooling and supporting libraries.Vue (pronounced /vjuː/, like view) is a progressive framework for building user interfaces. Unlike other monolithic frameworks, Vue is designed from the ground up to be incrementally adoptable. The core library is focused on the view layer only, and is easy to pick up and integrate with other libraries or existing projects. On the other hand, Vue is also perfectly capable of powering sophisticated Single-Page Applications when used in combination with modern tooling and supporting libraries.' },
          { setion_id: 1, locationId: 11, title: 'setion2', textContent: '<h2>Chapter-04-setion2 Vue.js</h2>chapter-01--setion2 Vue (pronounced /vjuː/, like view) is a progressive framework for building user interfaces. Unlike other monolithic frameworks, Vue is designed from the ground up to be incrementally adoptable. The core library is focused on the view layer only, and is easy to pick up and integrate with other libraries or existing projects. On the other hand, Vue is also perfectly capable of powering sophisticated Single-Page Applications when used in combination with modern tooling and supporting libraries.' },
          { setion_id: 2, locationId: 12, title: 'setion3', textContent: '<h2>Chapter-04-setion3 Vue.js</h2>chapter-01--setion3 Vue (pronounced /vjuː/, like view) is a progressive framework for building user interfaces. Unlike other monolithic frameworks, Vue is designed from the ground up to be incrementally adoptable. The core library is focused on the view layer only, and is easy to pick up and integrate with other libraries or existing projects. On the other hand, Vue is also perfectly capable of powering sophisticated Single-Page Applications when used in combination with modern tooling and supporting libraries.  Vue (pronounced /vjuː/, like view) is a progressive framework for building user interfaces. Unlike other monolithic frameworks, Vue is designed from the ground up to be incrementally adoptable. The core library is focused on the view layer only, and is easy to pick up and integrate with other libraries or existing projects. On the other hand, Vue is also perfectly capable of powering sophisticated Single-Page Applications when used in combination with modern tooling and supporting libraries.' }
        ]
      },
      {
        chapter_id: 5,
        title: 'chapter-05',
        setions: [
          { setion_id: 0, locationId: 13, title: 'setion5', textContent: '<h2>Chapter-05-setion5 Vue.js</h2>chapter-02--setion5 Vue (pronounced /vjuː/, like view) is a progressive framework for building user interfaces. Unlike other monolithic frameworks, Vue is designed from the ground up to be incrementally adoptable. The core library is focused on the view layer only, and is easy to pick up and integrate with other libraries or existing projects. On the other hand, Vue is also perfectly capable of powering sophisticated Single-Page Applications when used in combination with modern tooling and supporting libraries.  Vue (pronounced /vjuː/, like view) is a progressive framework for building user interfaces. Unlike other monolithic frameworks, Vue is designed from the ground up to be incrementally adoptable. The core library is focused on the view layer only, and is easy to pick up and integrate with other libraries or existing projects. On the other hand, Vue is also perfectly capable of powering sophisticated Single-Page Applications when used in combination with modern tooling and supporting libraries.' },
          { setion_id: 1, locationId: 14, title: 'setion6', textContent: '<h2>Chapter-05-setion6 Vue.js</h2>chapter-02--setion6 Vue (pronounced /vjuː/, like view) is a progressive framework for building user interfaces. Unlike other monolithic frameworks, Vue is designed from the ground up to be incrementally adoptable. The core library is focused on the view layer only, and is easy to pick up and integrate with other libraries or existing projects. On the other hand, Vue is also perfectly capable of powering sophisticated Single-Page Applications when used in combination with modern tooling and supporting libraries.' },
          { setion_id: 2, locationId: 15, title: 'setion7', textContent: '<h2>Chapter-05-setion7 Vue.js</h2>chapter-02--setion7 Vue (pronounced /vjuː/, like view) is a progressive framework for building user interfaces. Unlike other monolithic frameworks, Vue is designed from the ground up to be incrementally adoptable. The core library is focused on the view layer only, and is easy to pick up and integrate with other libraries or existing projects. On the other hand, Vue is also perfectly capable of powering sophisticated Single-Page Applications when used in combination with modern tooling and supporting libraries.  Vue (pronounced /vjuː/, like view) is a progressive framework for building user interfaces. Unlike other monolithic frameworks, Vue is designed from the ground up to be incrementally adoptable. The core library is focused on the view layer only, and is easy to pick up and integrate with other libraries or existing projects. On the other hand, Vue is also perfectly capable of powering sophisticated Single-Page Applications when used in combination with modern tooling and supporting libraries.' }
        ]
      }

    ]
  }
]

export default bookData
